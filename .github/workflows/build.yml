# Copyright 2023 Gustavo Salomao
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: build
on:
  push:
    branches: [ master ]
  pull_request:

env:
  FORCE_COLOR: true

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: '^1.20.0'

      - name: Install gitlint
        run: |
          pip install gitlint
          gitlint --version

      - name: Run gitlint
        run: gitlint

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2

      - name: Run vet
        run: make vet

  complexity-analysis:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: '^1.20.0'

      - name: Install gocyclo
        run: go install github.com/fzipp/gocyclo/cmd/gocyclo@latest

      - name: Install gocognit
        run: go install github.com/uudashr/gocognit/cmd/gocognit@latest

      - name: Calculate cyclomatic complexities
        run: make complexity

  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: '^1.20.0'

      - name: Build application
        run: make build

  tests:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: '^1.20.0'

      - name: Run tests
        run: make coverage

      - name: Upload coverage report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
